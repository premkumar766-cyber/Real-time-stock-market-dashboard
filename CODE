import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import plotly.graph_objects as go
import yfinance as yf
from datetime import datetime, timedelta

# Streamlit App Configuration
st.set_page_config(page_title="Real-Time Stock Dashboard", layout="wide")

st.title("📈 Real-Time Stock Market Dashboard")

# User inputs
ticker = st.sidebar.text_input("Enter Stock Ticker Symbol (e.g. AAPL, TSLA, INFY):", value="AAPL")
period = st.sidebar.selectbox("Select Data Period:", ["1d", "5d", "1mo", "3mo", "6mo", "1y"])
interval = st.sidebar.selectbox("Select Interval:", ["1m", "5m", "15m", "1h", "1d"])

# Fetch data from Yahoo Finance
@st.cache_data(ttl=300)
def get_stock_data(ticker, period, interval):
    data = yf.download(ticker, period=period, interval=interval)
    return data

data = get_stock_data(ticker, period, interval)

# Display data
if data.empty:
    st.warning("No data found. Please check the ticker symbol.")
else:
    st.subheader(f"Stock Data: {ticker.upper()}")

    st.write(data.tail())

    # Plot with matplotlib
    st.subheader("📉 Matplotlib Price Chart")
    fig, ax = plt.subplots()
    data['Close'].plot(ax=ax, title=f"{ticker.upper()} Closing Prices")
    ax.set_ylabel("Price (USD)")
    st.pyplot(fig)

    # Plot with Plotly (candlestick)
    st.subheader("📊 Interactive Candlestick Chart (Plotly)")
    fig_candle = go.Figure(data=[go.Candlestick(
        x=data.index,
        open=data['Open'],
        high=data['High'],
        low=data['Low'],
        close=data['Close']
    )])
    fig_candle.update_layout(title=f"{ticker.upper()} Candlestick Chart", xaxis_rangeslider_visible=False)
    st.plotly_chart(fig_candle, use_container_width=True)

    # Financial Indicators
    st.subheader("📌 Key Financial Indicators")
    col1, col2, col3 = st.columns(3)
    col1.metric("Latest Price", f"${data['Close'][-1]:.2f}")
    col2.metric("Volume", f"{data['Volume'][-1]:,}")
    col3.metric("Daily Change", f"{(data['Close'][-1] - data['Open'][-1]):.2f} USD")

    # Moving average
    st.subheader("📏 Moving Averages")
    data['MA20'] = data['Close'].rolling(window=20).mean()
    data['MA50'] = data['Close'].rolling(window=50).mean()

    fig_ma, ax = plt.subplots()
    data[['Close', 'MA20', 'MA50']].plot(ax=ax)
    ax.set_title(f"{ticker.upper()} Moving Averages")
    ax.set_ylabel("Price (USD)")
    st.pyplot(fig_ma)
